enum Role {
  user
  admin
}

type User {
  # Fields
  username: String!
  createdAt: DateTime!

  # Relations
  votes: [VOTED_ON!]!
  proficiencies: [PROFICIENCY!]!

  # Functions
  discover: [Topic!]!
}

type VOTED_ON @relation(name: "VOTED_ON") {
  from: User!
  to: AmosGame!
  timestamp: DateTime!
}

type PROFICIENCY @relation (name: "PROFICIENCY") {
  from: User!
  to: Topic!
}

extend type Query {
  login (usernameOrEmail: String!, password: String!): String!
  currentUser (name: String): String
  users: [User!] @hasRole (roles: [admin])
    @cypher(
      statement: "MATCH (u:User) WITH { username: u.username, id: u.id, email: u.email} as User RETURN User"
    )
}

extend type Mutation {
  signup (username: String!, email: String!, password: String!): String!
  updatePassword (email: String!, password: String!, _new: String!): String!
  selfAttest (topic: String!): Boolean!
}
